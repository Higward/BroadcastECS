
local hex = require "main.utils.hexagon"
local layout = require "main.utils.layout"
--local test = require "main.tests.util_test"
local sp = {}

function init(self)
	msg.post(".", "acquire_input_focus")
	msg.post("@render:", "use_fixed_fit_projection", { near = -1, far = 1 })
	sp = create()
end

function update(self, dt)
	
end

function on_input(self, action_id, action)
	if action_id == hash("click") and action.pressed then
		print("Click!")
		local mouse = {x=action.x, y=action.y}
		local h = layout.pixel_to_hex(l, {x=mouse.x, y=mouse.y})
		for id, i in pairs(sp) do
			local url = msg.url(nil, i , "hex")
			local qrs = {q = go.get(url, "q"), r = go.get(url, "r"), s = go.get(url, "s")}
			if (qrs.q == h.q and qrs.r==h.r and qrs.s==h.s) then
				go.delete(i)
				table.remove(sp, id)
			end
		end
	end
end

function size(s)
	local result = {}
	for i = -s,s do
		for j = -s,s do 
			table.insert(result, {col=j, row =i})
		end
	end
	return result
end

function create()
	l = layout.hex_layout_new(layout_pointy, layout.point(84, 84), layout.point(400, 400))
	local component = "/go#factory"
	local data2 = {{col=1, row=0}, {col=0, row=0}}
	local data = size(2)
	local sp = layout.create(l, component, data)
	return sp
end
